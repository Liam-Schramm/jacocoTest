/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 27 16:03:55 GMT 2017
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.Stack;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Stack_ESTest extends Stack_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. tutorial.Stack.<init>()V: root-Branch
   * Goal 2. tutorial.Stack.isEmpty()Z: I4 Branch 3 IFGT L21 - false
   */

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      boolean boolean0 = stack0.isEmpty();
      assertTrue(boolean0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. tutorial.Stack.<init>()V: root-Branch
   * Goal 2. tutorial.Stack.push(Ljava/lang/Object;)V: I6 Branch 1 IF_ICMPLT L11 - true
   * Goal 3. tutorial.Stack.isEmpty()Z: I4 Branch 3 IFGT L21 - true
   */

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      assertTrue(stack0.isEmpty());
      
      stack0.push("");
      boolean boolean0 = stack0.isEmpty();
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. tutorial.Stack.<init>()V: root-Branch
   * Goal 2. tutorial.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L16 - false
   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      // Undeclared exception!
      try { 
        stack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("tutorial.Stack", e);
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. tutorial.Stack.<init>()V: root-Branch
   * Goal 2. tutorial.Stack.push(Ljava/lang/Object;)V: I6 Branch 1 IF_ICMPLT L11 - true
   * Goal 3. tutorial.Stack.pop()Ljava/lang/Object;: I4 Branch 2 IFGT L16 - true
   */

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push(stack0);
      assertFalse(stack0.isEmpty());
      
      Stack stack1 = (Stack)stack0.pop();
      assertTrue(stack1.isEmpty());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. tutorial.Stack.<init>()V: root-Branch
   * Goal 2. tutorial.Stack.push(Ljava/lang/Object;)V: I6 Branch 1 IF_ICMPLT L11 - true
   * Goal 3. tutorial.Stack.push(Ljava/lang/Object;)V: I6 Branch 1 IF_ICMPLT L11 - false
   */

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Stack<Object> stack0 = new Stack<Object>();
      stack0.push(stack0);
      Integer integer0 = new Integer(1);
      stack0.push(integer0);
      stack0.push(stack0);
      stack0.push(integer0);
      stack0.push("Stack exceeded capacity!");
      stack0.push(integer0);
      stack0.push(integer0);
      Object object0 = new Object();
      stack0.push(object0);
      stack0.push(integer0);
      stack0.push(object0);
      // Undeclared exception!
      try { 
        stack0.push(integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Stack exceeded capacity!
         //
         assertThrownBy("tutorial.Stack", e);
      }
  }
}
